{"version":3,"sources":["webpack:///src/app/modules/measure/measure-routing.module.ts","webpack:///src/app/modules/measure/measure.module.ts","webpack:///src/app/modules/measure/pages/measure/measure.component.ts","webpack:///src/app/modules/measure/pages/measure/measure.component.html"],"names":["routes","path","component","MeasureRoutingModule","forChild","imports","exports","MeasureModule","declarations","MeasureComponent","msrv","measures","newMeasure","id","date","value","units","type","sensor","author","getMeasures","get","subscribe","data","error","alert","console","log","m","save","response","saveMeasure","selector","templateUrl","styleUrls"],"mappings":"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","file":"riego-modules-measure-measure-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MeasureComponent} from '@riego/modules/measure/pages/measure/measure.component';\n\n\nconst routes: Routes = [\n  { path:\"\", component:MeasureComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeasureRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MeasureRoutingModule } from './measure-routing.module';\nimport { MeasureComponent } from './pages/measure/measure.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [MeasureComponent],\n  imports: [\n    CommonModule,\n    MeasureRoutingModule,\n    FormsModule,\n    HttpClientModule \n  ]\n})\nexport class MeasureModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MeasureService} from '@riego/shared/services/measure.service'\nimport { MeasureModel } from '@riego/shared/models/measure.model';\n\n\n@Component({\n  selector: 'app-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.scss']\n})\nexport class MeasureComponent implements OnInit {\n\n  public measures: MeasureModel[];\n  public newMeasure: any;\n\n  constructor(private msrv: MeasureService) { \n    this.measures = [];\n    this.newMeasure = {\n      id:\"\",\n      date:\"\",\n      value:\"\",\n      units:\"\",\n      type:\"\",\n      sensor:\"\",\n      author:\"\"\n    }\n    \n  }\n\n  ngOnInit(): void {\n    this.getMeasures();\n  }\n\n  getMeasures(){\n    this.msrv.get()\n      .subscribe(\n        data=>{\n          this.measures = data;\n        },error=>{\n         alert(\"¡¡Error al obtener las medidas, mirar en la consola!!\");\n         console.log(error);\n        }\n      );\n  }\n\n  saveMeasure(m: MeasureModel){\n    this.msrv.save(m)\n      .subscribe(\n        response=>{\n          alert(\"Medida guardada\");\n          this.getMeasures();\n        },error=>{\n          alert(\"Error al salvar la medida, mirar en la consola\");\n          console.log(error);\n        }\n      );\n    this.msrv.save(m);\n  }\n\n  removeMeasure(m: MeasureModel){\n    this.msrv.delete(m)\n      .subscribe(\n        response =>{\n          alert(\"Medida borrada\");\n          this.getMeasures();\n        },error=>{\n          alert(\"Error al borrar la medida, mirar en la consola\");\n          console.log(error);\n        }\n      );\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row text-center border-bottom\">\n        <div class=\"col\">id</div>\n        <div class=\"col\">date</div>\n        <div class=\"col\">value</div>\n        <div class=\"col\">units</div>\n        <div class=\"col\">type</div>\n        <div class=\"col\">sensor</div>\n        <div class=\"col\">author</div>\n        <div class=\"col\">&nbsp;</div>\n    </div>\n    <div class=\"row text-center border-bottom\">\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"newMeasure.id\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.date\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.value\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.units\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.type\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.sensor\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newMeasure.author\">\n        </div>\n        <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-success m-1\" (click)=\"saveMeasure(newMeasure)\">\n                <i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n    </div>\n    <div class=\"row text-center border-bottom\" *ngFor=\"let m of measures;let i = index\">\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"m.id\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.date\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.value\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.units\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.type\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.sensor\">\n        </div>\n        <div class=\"col\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"m.author\">\n        </div>\n        <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-success m-1\" (click)=\"saveMeasure(m)\">\n                <i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-danger m-1\" (click)=\"removeMeasure(m)\">\n                <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n    </div>\n</div>\n"]}