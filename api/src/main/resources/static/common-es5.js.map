{"version":3,"sources":["webpack:///src/app/shared/services/measure.service.ts"],"names":["urlSrv","baseUrl","MeasureService","http","get","m","put","id","types","push","name","units","_type","_date","measure","date","author","sensor","value","type","providedIn"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\nimport {environment} from '@riego/env';\n//Models\nimport { MeasureTypeModel } from '@riego/shared/models/measure-type.model';\nimport { MeasureModel } from '@riego/shared/models/measure.model';\n\nconst urlSrv = environment.baseUrl + \"measure\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasureService {\n\n  constructor(private http : HttpClient) { }\n\n  get(){\n    return this.http.get<MeasureModel[]>(urlSrv);\n  }\n\n  save(m: MeasureModel){\n    return this.http.put(urlSrv, m);\n  }\n\n  delete (m: MeasureModel){\n    return this.http.delete(urlSrv+\"/\"+m.id);\n  }\n\n\n  /************/\n /** BORRAR **/\n/************/\n  getTypes(){\n    let types: Array<MeasureTypeModel> = []\n    types.push(\n      { id:1, name:\"Temperatura Ambiente\",  units:\"ÂºC\" },\n      { id:2, name:\"Humedad Ambiente\",      units:\"%\"  },  \n      { id:3, name:\"Humedad Suelo\",         units:\"%\"  },   \n      { id:4, name:\"Luminosidad\",           units:\"%\"  },\n      { id:5, name:\"Riego\",                 units:\"MIN\"},\n      { id:6, name:\"Arranque App\",          units:\"UP\" }\n    );\n    return types;    \n  }\n\n  getByTypeAndDate(_type: MeasureTypeModel, _date: String){\n    let measure: Array<MeasureModel> = [];\n      measure.push(\n      {id:1, date:_date + \"01\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:2, date:_date + \"02\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:3, date:_date + \"03\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:4, date:_date + \"04\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:5, date:_date + \"05\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:6, date:_date + \"06\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:7, date:_date + \"07\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:8, date:_date + \"08\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:9, date:_date + \"09\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:10, date:_date + \"10\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:11, date:_date + \"11\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:12, date:_date + \"12\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:13, date:_date + \"13\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:14, date:_date + \"14\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:15, date:_date + \"15\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:16, date:_date + \"16\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:17, date:_date + \"17\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:18, date:_date + \"18\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:19, date:_date + \"19\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:20, date:_date + \"20\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:21, date:_date + \"21\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:22, date:_date + \"22\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type},\n      {id:23, date:_date + \"23\",author:\"arduino\", sensor:\"arduino\", value:\"30\", type:_type}\n    )\n    return measure;\n\n  }\n}\n"]}